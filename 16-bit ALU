module ALU(out,a,b,sel);
  input[15:0]a,b;
  input[3:0]sel;
  output reg[15:0]out;
  always @(*)
    begin
      case(sel)
        4'b0000: out = a + b;
      4'b0001: out = a - b;
      4'b0010: out = a & b;
      4'b0011: out = a | b;
      4'b0100: out = a ^ b;
      4'b0101: out = ~a;
      4'b0110: out = a << 1;
      4'b0111: out = a >> 1;
      4'b1000: out = a * b;
      4'b1001: out = (b != 0) ? (a / b) : 16'hFFFF;  // protect against divide by 0
      4'b1010: out = (b != 0) ? (a % b) : 16'hFFFF;
      4'b1011: out = (a == b) ? 16'h0001 : 16'h0000;
      4'b1100: out = (a > b)  ? 16'h0001 : 16'h0000;
      4'b1101: out = (a < b)  ? 16'h0001 : 16'h0000;
      4'b1110: out = ~(a & b);
      4'b1111: out = ~(a | b);
        default: out=16'h0000;
      endcase
    end
endmodule 
